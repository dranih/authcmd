# Print 'denied', so a user can figure out the program was not run.
show_terse_denied: false

# Show which commands are allowed
show_allowed: false

# Feed back a denied command line to the invoking user
show_denied: false

# Should we expand the env vars ?
expand_env_vars: false

# Should we log ?
enable_logging: false

# Log file (default : ~/authcmd.log)
#log_file: /var/log/authcmd.log

# If use_shell is set (to default or a specific shell), command is launch with $shell -c "command"
# If not, it uses the standard os/exec from Go
# Notes : 
#   - if using a shell, env variables will be available to the command
#   - input command is not sanitized and is a security breach (ie: echo test;rm *)
#use_shell: default

# Show a help text to the user.  The text is everything after the line
# with the help_text token to the end of the file.
help_text: "This is the help text shown, when you send a command line which is not accepted."

# Allowed cmd for all
allowed_cmd:
  - command: id
  - command: /bin/echo
    replace: {"pizza$":"pasta"}
    args: # Golang regex
      forbidden: [\$]
  - command: ls
    args:
      allowed: [-l]
  - command: cat
    - mustMatch: "~/.*authcmd/.*go"

# Override config and allowed commands by a key tag provided as a arg to authcmd
key_tags:
  client1: 
    help_text: "Help text for user1"
    show_allowed: true
    allowed_cmd:
      - command: ls
        args:
          allowed: [-r,-t,-a]